a.
  1.
    california_housing_dataframe["rooms_per_person"] = california_housing_dataframe["total_rooms"] / california_housing_dataframe["population"]

    calibration_data = train_model(
        learning_rate=0.05,
        steps=500,
        batch_size=5,
        input_feature="rooms_per_person"
    )
  2.
    plt.figure(figsize=(15, 6))
    plt.subplot(1, 2, 1)
    plt.scatter(calibration_data["predictions"], calibration_data["targets"])

    plt.subplot(1, 2, 2)
    _ = california_housing_dataframe["rooms_per_person"].hist()

    # most values of rooms_per_person are lower than 5, but a few are higher than 5

  3.
    california_housing_dataframe["rooms_per_person"] = (
    california_housing_dataframe["rooms_per_person"]).apply(lambda x: min(x, 5))

    _ = california_housing_dataframe["rooms_per_person"].hist()

b. Synthetic features allow us to understand associations between variables (e.g., proportions) that we couldn't otherwise look at

c. Outliers data points that are very much bigger or smaller than the other data points. Typically we clip them using min or max.
